\begin{Verbatim}[commandchars=\\\{\}]
\PYG{k}{def}\PYG{+w}{ }\PYG{n+nf}{check\PYGZus{}side\PYGZus{}pixels}\PYG{p}{(}\PYG{n+nb+bp}{self}\PYG{p}{,} \PYG{n}{mask}\PYG{p}{):}
    \PYG{n}{onLeft} \PYG{o}{=} \PYG{k+kc}{False}
    \PYG{n}{onRight} \PYG{o}{=} \PYG{k+kc}{False}
    \PYG{n}{height}\PYG{p}{,} \PYG{n}{width} \PYG{o}{=} \PYG{n}{mask}\PYG{o}{.}\PYG{n}{shape}

    \PYG{c+c1}{\PYGZsh{} Defining middle region of the mask}
    \PYG{n}{middle\PYGZus{}start} \PYG{o}{=} \PYG{p}{(}\PYG{n}{width} \PYG{o}{//} \PYG{l+m+mi}{2}\PYG{p}{)} \PYG{o}{\PYGZhy{}} \PYG{p}{(}\PYG{n+nb+bp}{self}\PYG{o}{.}\PYG{n}{\PYGZus{}middle\PYGZus{}width} \PYG{o}{//} \PYG{l+m+mi}{2}\PYG{p}{)}
    \PYG{n}{middle\PYGZus{}end} \PYG{o}{=} \PYG{p}{(}\PYG{n}{width} \PYG{o}{//} \PYG{l+m+mi}{2}\PYG{p}{)} \PYG{o}{+} \PYG{p}{(}\PYG{n+nb+bp}{self}\PYG{o}{.}\PYG{n}{\PYGZus{}middle\PYGZus{}width} \PYG{o}{//} \PYG{l+m+mi}{2}\PYG{p}{)}

    \PYG{c+c1}{\PYGZsh{} Create a mask for the middle region and remove it from the original mask}
    \PYG{n}{middle\PYGZus{}mask} \PYG{o}{=} \PYG{n}{np}\PYG{o}{.}\PYG{n}{zeros\PYGZus{}like}\PYG{p}{(}\PYG{n}{mask}\PYG{p}{)}
    \PYG{n}{middle\PYGZus{}mask}\PYG{p}{[:,} \PYG{n}{middle\PYGZus{}start}\PYG{p}{:}\PYG{n}{middle\PYGZus{}end}\PYG{p}{]} \PYG{o}{=} \PYG{l+m+mi}{255}
    \PYG{n}{masked\PYGZus{}binary} \PYG{o}{=} \PYG{n}{cv2}\PYG{o}{.}\PYG{n}{bitwise\PYGZus{}and}\PYG{p}{(}\PYG{n}{mask}\PYG{p}{,} \PYG{n}{cv2}\PYG{o}{.}\PYG{n}{bitwise\PYGZus{}not}\PYG{p}{(}\PYG{n}{middle\PYGZus{}mask}\PYG{p}{))}

    \PYG{c+c1}{\PYGZsh{} Split the masked binary into left and right halves}
    \PYG{n}{left\PYGZus{}half} \PYG{o}{=} \PYG{n}{masked\PYGZus{}binary}\PYG{p}{[:,} \PYG{p}{:}\PYG{n}{width} \PYG{o}{//} \PYG{l+m+mi}{2}\PYG{p}{]}
    \PYG{n}{right\PYGZus{}half} \PYG{o}{=} \PYG{n}{masked\PYGZus{}binary}\PYG{p}{[:,} \PYG{n}{width} \PYG{o}{//} \PYG{l+m+mi}{2}\PYG{p}{:]}

    \PYG{c+c1}{\PYGZsh{} Count the black pixels in both halves}
    \PYG{n}{left\PYGZus{}pixels} \PYG{o}{=} \PYG{n}{np}\PYG{o}{.}\PYG{n}{sum}\PYG{p}{(}\PYG{n}{left\PYGZus{}half} \PYG{o}{==} \PYG{l+m+mi}{255}\PYG{p}{)}
    \PYG{n}{right\PYGZus{}pixels} \PYG{o}{=} \PYG{n}{np}\PYG{o}{.}\PYG{n}{sum}\PYG{p}{(}\PYG{n}{right\PYGZus{}half} \PYG{o}{==} \PYG{l+m+mi}{255}\PYG{p}{)}

    \PYG{c+c1}{\PYGZsh{} Define a threshold for the number of black pixels to consider left or right}
    \PYG{n}{threshold\PYGZus{}lr} \PYG{o}{=} \PYG{p}{(}\PYG{n+nb+bp}{self}\PYG{o}{.}\PYG{n}{\PYGZus{}black\PYGZus{}pixels} \PYG{o}{//} \PYG{l+m+mi}{3}\PYG{p}{)} \PYG{o}{\PYGZhy{}} \PYG{l+m+mi}{20}

    \PYG{c+c1}{\PYGZsh{} Check if the left or right region has sufficient black pixels}
    \PYG{k}{if} \PYG{n}{left\PYGZus{}pixels} \PYG{o}{\PYGZgt{}} \PYG{n}{threshold\PYGZus{}lr}\PYG{p}{:}
        \PYG{n}{onLeft} \PYG{o}{=} \PYG{k+kc}{True}
    \PYG{k}{if} \PYG{n}{right\PYGZus{}pixels} \PYG{o}{\PYGZgt{}} \PYG{n}{threshold\PYGZus{}lr}\PYG{p}{:}
        \PYG{n}{onRight} \PYG{o}{=} \PYG{k+kc}{True}

    \PYG{k}{return} \PYG{n}{left\PYGZus{}pixels}\PYG{p}{,} \PYG{n}{right\PYGZus{}pixels}\PYG{p}{,} \PYG{n}{onLeft}\PYG{p}{,} \PYG{n}{onRight}

\end{Verbatim}
